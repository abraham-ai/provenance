# Setup

## Install Rust, Foundry, Forge

https://book.getfoundry.sh/getting-started/installation

## Contracts

Installation:

```
cd contracts
foundryup
pnpm i
forge install
forge test
```

## Graph Node

```
git clone https://github.com/abraham-ai/graph-node.git
cd graph-node/docker
export MNEMONIC="test test test test test test test test test test test junk"
docker compose up
```

There should now be a local `anvil` blockchain running on localhost:8547, and a local graph node.

## Deploy Contracts To Local Blockchain

```
cd contracts
cp .env.example .env
forge script script/Deploy.s.sol --broadcast --fork-url http://localhost:8547
```

## Deploy Local Subgraph

```
cd eden-subgraph
yarn
yarn refresh-local
yarn prep 1337
yarn create-local
yarn deploy-local
```

Now, navigate to http://localhost:8000/subgraphs/name/eden-subgraph-local/graphql?query=query+%7B%0A++mintEvents+%7B%0A++++id%0A++%7D%0A%7D

## Start Mongo
```
docker compose up
```

## Start Watcher scripts
cd watcher
pnpm i
node watch.js
node modiify.js
```

The watcher script queries the subgraph every so often to look for new mint events and writes them to db

The modify script queries the db for unacknowledged mint events, and updates their token URI with a backend signer.

## Start the Frontend
```
cd frontend
yarn install
yarn dev
```

Navigate to http://localhost:3000. There should already be a wallet connected. Click 'Claim Token'. If all goes well, the token should be minted, the mint is written to the subgraph, the watcher writes the mint to the db, and the modifier will update the metadata.